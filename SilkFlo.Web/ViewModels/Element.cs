/*********************************************************
       Code Generated By  .  .  .  .  Delaney's ScriptBot
       WWW .  .  .  .  .  .  .  .  .  www.scriptbot.io
       Template Name.  .  .  .  .  .  Project Green 3.0
       Template Version.  .  .  .  .  20220508 002
       Author .  .  .  .  .  .  .  .  Delaney

                          .___,
                       ___('v')___
                       `"-\._./-"'
                           ^ ^

 *********************************************************/

using Microsoft.AspNetCore.Mvc.Rendering;
using System.Collections.Generic;

namespace SilkFlo.Web.ViewModels
{
    public class Element
    {
        public string Title { get; set; }
        public string HotSpotId { get; set; }
        public string Prompt { get; set; }
        public string PlaceHolder { get; set; }
        public string Id { get; set; }
        public string Name { get; set; }
        public string Value { get; set; }
        public string NoValue { get; set; } = "Select...";

        public bool IsChecked { get; set; }

        public string Autocomplete { get; set; } = "off";

        public string MinimumValue { get; set; }
        public string MaximumValue { get; set; }

        public string Step { get; set; } = "0.01";

        /// <summary>
        /// Number of characters
        /// </summary>
        public int MaximumLength { get; set; } = 750;

        private string _elementType;
        public string ElementType
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_elementType))
                    _elementType = "text";

                return _elementType;
            }
            set => _elementType = value;
        }


        public bool IsReadOnly { get; set; }


        public string ContainerClass { get; set; }


        public bool IsInvalid { get; set; }


        public string InvalidFeedback { get; set; } = "Required";

        /// <summary>
        /// min=-height used by TextArea element.
        /// </summary>
        private string _minHeight;
        public string MinHeight
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_minHeight))
                    _minHeight = "200px";

                return _minHeight;
            }
            set => _minHeight = value;
        }
        public string MaxHeight { get; set; }
        public string Height { get; set; }

        public string MinWidth { get; set; }

        public string MaxWidth { get; set; }
        public string Width { get; set; }

        public string JavaScriptOnFocusOut { get; set; }
        public string JavaScriptOnKeyDown { get; set; }
        public string JavaScriptOnKeyPress { get; set; }

        public string JavaScriptOnInput { get; set; }

        public string JavaScriptOnChange { get; set; }


        public string OnInput => string.IsNullOrWhiteSpace(JavaScriptOnInput) ? "" : $"oninput=\"{JavaScriptOnInput}\"";


        public string JavaOnMouseMove { get; set; }
        public string OnMouseMove => string.IsNullOrWhiteSpace(JavaOnMouseMove) ? "" : $"onmousemove=\"{JavaOnMouseMove}\"";


        public string JavaOnMouseOut { get; set; }

        public string OnMouseOut => string.IsNullOrWhiteSpace(JavaOnMouseOut) ? "" : $"onmouseout=\"{JavaOnMouseOut}\"";


        public bool IsFloatingLabel { get; set; } = true;

        public string DateFormat { get; set; } = "YYYY-MM-DD HH:mm";

        public string ButtonClass { get; set; } = "btn-primary";

        public string InputClass { get; set; }
        public IEnumerable<SelectListItem> SelectList { get; set; }
        public IEnumerable<Models.Shared.IWeighting> SelectWeightedList { get; set; }

        public string Attributes { get; set; }




        public bool PickIsVisible { get; set; }

        public string CommentId { get; set; }
        public string CommentName { get; set; }
        public string CommentValue { get; set; }
        public string CommentErrorMessage { get; set; }
        public bool CommentShow { get; set; }
        public bool CommentShowError { get; set; }

        /// <summary>
        /// Number of characters in Comment
        /// </summary>
        public int CommentMaximumLength { get; set; } = 750;



        public string CustomStylesContainer { get; set; }
        public string CustomStyles { get; set; }

        public string AdditionalStyles { get; set; }

        public string Style
        {
            get
            {
                var style = "";


                if (!string.IsNullOrWhiteSpace(CustomStyles))
                    style += CustomStyles;


                if (!string.IsNullOrWhiteSpace(AdditionalStyles))
                    style += AdditionalStyles;


                if (!string.IsNullOrWhiteSpace(MinWidth))
                    style += "min-width: " + MinWidth + "; ";


                if (!string.IsNullOrWhiteSpace(MaxWidth))
                    style += "max-width: " + MaxWidth + "; ";


                if (!string.IsNullOrWhiteSpace(Width))
                    style += "width: " + Width + "; ";


                if (!string.IsNullOrWhiteSpace(Prefix))
                    style += "border-top-left-radius: 0; border-bottom-left-radius: 0;";


                if (!string.IsNullOrWhiteSpace(Suffix))
                    style += "border-top-right-radius: 0; border-bottom-right-radius: 0;";


                else if (!string.IsNullOrWhiteSpace(Height))
                    style += "height: " + Height + "; ";

                if (string.IsNullOrWhiteSpace(Title))
                {
                    style += "padding-top: 0; padding-bottom: 0; ";
                }

                if (!string.IsNullOrWhiteSpace(style))
                    style = $" style = \"{style}\"";


                return style;
            }
        }

        public string Prefix { get; set; }
        public string Suffix { get; set; }

        public string StylesContainer
        {
            get
            {
                var style = "";

                if (!string.IsNullOrWhiteSpace(CustomStylesContainer))
                    style += CustomStylesContainer;


                if (!string.IsNullOrWhiteSpace(style))
                    style = $"style = \"{style}\"";

                return style;
            }
        }


        public string InputAttribute
        {
            get
            {
                var str = "";


                // id
                if (!string.IsNullOrWhiteSpace(Id))
                    str += $" id=\"{Id}\"";


                // name
                if (!string.IsNullOrWhiteSpace(Name))
                    str += $" name=\"{Name}\"";


                // type
                if (!string.IsNullOrWhiteSpace(ElementType))
                    str += $" type=\"{ElementType}\"";


                // class
                var elementClass = "form-control " + InputClass + " ";

                if (IsInvalid)
                    elementClass += " is-invalid";

                if (!string.IsNullOrWhiteSpace(InvalidFeedback))
                    elementClass += " has-validation";

                if (!string.IsNullOrWhiteSpace(elementClass))
                    str += $" class=\"{elementClass}\"";



                // onInput
                var onInputEvent = "";
                if (!string.IsNullOrWhiteSpace(InvalidFeedback))
                    onInputEvent = "SilkFlo.IsRequired(this);";

                if (!string.IsNullOrWhiteSpace(JavaScriptOnInput))
                    onInputEvent += $" {JavaScriptOnInput}; ";

                if (!string.IsNullOrWhiteSpace(onInputEvent))
                    str += $" oninput=\"{onInputEvent}\"";

                if (!string.IsNullOrWhiteSpace(JavaScriptOnKeyDown))
                    str += $" onkeydown=\"{JavaScriptOnKeyDown}\"\r\n";

                if (!string.IsNullOrWhiteSpace(JavaScriptOnKeyPress))
                    str += $" onkeypress=\"{JavaScriptOnKeyPress}\"\r\n";

                if (!string.IsNullOrWhiteSpace(JavaScriptOnChange))
                    str += $" onchange=\"{JavaScriptOnChange}\"\r\n";

                //onFocusOut
                var onfocusoutEvent = "";
                if (!string.IsNullOrWhiteSpace(InvalidFeedback))
                    onfocusoutEvent = "SilkFlo.IsRequired(this);";

                if (!string.IsNullOrWhiteSpace(JavaScriptOnFocusOut))
                    onfocusoutEvent += " " + JavaScriptOnFocusOut + "; ";

                if (!string.IsNullOrWhiteSpace(onfocusoutEvent))
                    str += $" onfocusout=\"{onfocusoutEvent}\"";



                // type
                if (!string.IsNullOrWhiteSpace(ElementType))
                    str += $" type=\"{ElementType}\"";



                // autocomplete
                if (!string.IsNullOrWhiteSpace(Autocomplete))
                    str += $" autocomplete=\"{Autocomplete}\"";



                // MaximumLength
                if (MaximumLength > 0)
                    str += " maxlength=\"" + MaximumLength + "\"";


                if (!string.IsNullOrWhiteSpace(MinimumValue))
                    str += " min = " + MinimumValue;


                if (!string.IsNullOrWhiteSpace(MaximumValue))
                    str += " max = " + MaximumValue;



                // IsReadOnly
                if (IsReadOnly)
                {
                    str += " readonly ";
                }


                // Attributes
                if (!string.IsNullOrWhiteSpace(Attributes))
                    str += " " + Attributes + " ";

                // Style
                if (!string.IsNullOrWhiteSpace(Style))
                    str += Style;



                // placeholder
                if (IsFloatingLabel)
                    str += $" placeholder=\"{Title}\"";
                else if (!string.IsNullOrWhiteSpace(PlaceHolder))
                    str += $" placeholder=\"{PlaceHolder}\"";



                // Value
                if (!string.IsNullOrWhiteSpace(Value))
                    str += $" value=\"{Value}\" ";


                return str;
            }
        }
    }
}